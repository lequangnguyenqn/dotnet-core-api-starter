namespace MyApp.Api.Exceptions
{
    //
    // Summary:
    //     A machine-readable format for specifying errors in HTTP API responses based on
    //     https://tools.ietf.org/html/rfc7807.
    public class ProblemDetailsSwaggerResponse
    {
        /// <summary>
        /// A human-readable explanation specific to this occurrence of the problem.
        /// </summary>
        /// <example>Validation failed: \r\n -- Email: Email is invalid\r\n -- Name: Name must be less than 100 characters</example>
        public string Detail { get; set; }
        /// <summary>
        /// The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
        /// </summary>
        /// <example>400</example>
        public int? Status { get; set; }
        /// <summary>
        /// A short, human-readable summary of the problem type.It SHOULD NOT change from
        /// occurrence to occurrence of the problem, except for purposes of localization(e.g.,
        /// using proactive content negotiation; see[RFC7231], Section 3.4).
        /// </summary>
        /// <example>Validation failed</example>
        public string Title { get; set; }
        /// <summary>
        /// A URI reference [RFC3986] that identifies the problem type. This specification
        /// encourages that, when dereferenced, it provide human-readable documentation for
        /// the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member
        /// is not present, its value is assumed to be "about:blank".
        /// </summary>
        /// <example>https://tools.ietf.org/html/rfc7231#section-6.5.1</example>
        public string Type { get; set; }
        /// <summary>
        /// Used for app monitoring: Tracing error received by user; Performance analysis and optimization; A/B testing
        /// https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#activity-user-guide
        /// </summary>
        /// <example>|6a4839e8-4339f9e0e2e3e0cc.</example>
        public string TraceId { get; set; }
        /// <summary>
        /// This is uniquely identifies every HTTP request involved in operation processing,
        /// and is generated on the caller side and passed to callee
        /// </summary>
        /// <example>80000082-0006-ff00-b63f-84710c7967b</example>
        public string RequestId { get; set; }
        /// <summary>
        /// This is a unique identifier value that is attached to requests and messages
        /// that allow reference to a particular transaction or event chain.
        /// </summary>
        /// <example>c173176b-a7de-46ef-8a5a-30b715ee904a</example>
        public string CorrelationIid { get; set; }
    }
}
